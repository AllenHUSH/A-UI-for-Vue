@import './layout.styl';

/**
 * 颜色相关
 */
:root {
    // 八种内置颜色
    --colorBlack: #000000;
    --colorDark: #2C3E50;
    --colorGolden: #D3C1AF;
    --colorWhite: #FFFFFF;
    // --colorBlue: #99FFFF;
    // --colorGreen: #99FFCC;
    // --colorYellow: #FFFF99;
    // --colorRed: #FF9999;
    --colorBlue: #33CCFF;
    --colorGreen: #33CC99;
    --colorYellow: #FFCC00;
    --colorRed: #FF6666;
    // 默认前景色和背景色
    --colorFg: #2C3E50;
    --colorBg: #FFFFFF;
    --colorIFg: #D3C1AF;
    --colorIBg: #000000;

    // 深色主题前景色和背景色
    @media (prefers-color-scheme: dark) {
        --colorIFg: #2C3E50;
        --colorIBg: #FFFFFF;
        --colorFg: #D3C1AF;
        --colorBg: #000000;
    }
}

// 颜色对象
// 下文循环使用
colorList = {
    black: --colorBlack,
    dark: --colorDark,
    golden: --colorGolden,
    white: --colorWhite,
    blue: --colorBlue,
    green: --colorGreen,
    yellow: --colorYellow,
    red: --colorRed,
    fg: --colorFg,
    bg: --colorBg,
    ifg: --colorIFg,
    ibg: --colorIBg
};

// 生成颜色类
for key, value in colorList {
    .a-bg-{key} {
        background-color: var(value);

        // 如果是背景色/前景色，取反色
        // 如果是普通颜色，取当前前景色
        if (key == 'fg') {
            color: var(--colorBg);
        } else if (key == 'bg') {
            color: var(--colorFg);
        } else if (key == 'ifg') {
            color: var(--colorIBg);
        } else if (key == 'ibg') {
            color: var(--colorIFg);
        } else if ((key == 'black') || (key == 'dark')) {
            color: var(--colorGolden);
        } else {
            color: var(--colorDark);
        }
    }

    .a-text-{key} {
        color: var(value);
    }
}

/**
 * 基本
 */
* {
    margin: 0;
    padding: 0;
}

body {
    background-color: var(--colorBg);
    color: var(--colorFg);
    font-family: Avenir, Helvetica, Arial, sans-serif;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

p {
    margin: 0.5rem 0;
}


span{
    word-wrap: break-word;
    word-break: break-all;
    overflow: hidden;
} 

.a-icon {
    width: 1em;
    height: 1em;
    vertical-align: -0.15em;
    fill: currentColor;
    overflow: hidden;

    &.wider {
        width: 1.5rem;
    }
}

/**
 * 内置样式类
 */
_shadow(size = s_shadow) {
    xl_shadow = 1rem;
    l_shadow = 0.5rem;
    s_shadow = 0.2rem;
    box-shadow: 0 0 size var(--colorFg);
}

_radius(size = s_border) {
    // s_border = 0.2rem;
    s_border = 0;
    border-radius: size;
}

_padding(size = s_padding) {
    s_padding = 1rem;
    padding: size;
}

/**
 * 卡片
 */
.a-card {
    _shadow();
    _radius();
    _padding();
    transition: all 150ms;

    &.canHover:hover {
        _shadow(xl_shadow);
    }
}

/**
 * 按钮
 */
.a-button {
    display: inline-block;
    padding: 0.3rem 0.8rem;
    box-sizing: border-box;
    outline: none;
    font-size: 1rem;
    position: relative;
    _radius();
    font-weight: bolder;
    overflow: hidden;

    for key, value in colorList {
        &.{key} {
            // 默认继承填充背景
            @extend .a-bg-{key};
            transition: all 200ms ease;
            border: 0.2rem solid var(value);
            cursor: pointer;

            &.medium {
                padding: 0.2rem 0.6rem;
            }

            &.small {
                font-size: 0.8rem;
                padding: 0.2rem 0.6rem;
                border: 0.1rem solid var(value);
            }

            &.mini {
                font-size: 0.8rem;
                padding: 0 0.3rem;
                border: 0.1rem solid var(value);
            }

            &.hollow {
                background-color: inherit;
                color: var(value);
            }

            // hover动画
            &:hover {
                opacity: 0.7;
                transition: all 400ms ease;
            }

            &:active {
                top: 1px;
            }

            &.disabled {
                opacity: 0.5;
                cursor: not-allowed;
                top: 0;
            }
        }
    }
}

/**
 * 链接
 */
.a-link {
    for key, value in colorList {
        &.{key} {
            // 默认继承填充背景
            @extend .a-text-{key};
            text-decoration: none;
            font-weight: bold;
            cursor: pointer;

            &:hover {
                // text-decoration: underline;
                border-bottom: 1px solid var(value);
                opacity: 0.7;
            }

            &.disabled {
                border-bottom: none;
                opacity: 0.5;
                cursor: not-allowed;
            }
        }
    }
}